[workspace]
resolver = "2"
members = [
    "crates/*",
    "devolutions-agent",
    "devolutions-gateway",
    "devolutions-session",
    "jetsocat",
    "tools/generate-openapi",
]
default-members = [
    "devolutions-agent",
    "devolutions-gateway",
    "devolutions-session",
    "jetsocat",
]

# TODO: clean and fix compilation of the sogar component
exclude = [
    "crates/sogar-registry"
]

[profile.profiling]
inherits = "release"
debug = 1

[profile.production]
inherits = "release"
lto = true
strip = "symbols"

[patch.crates-io]
libsql = { git = "https://github.com/allan2/libsql", rev = "9364e90" }
tracing-appender = { git = "https://github.com/CBenoit/tracing.git", rev = "42097daf92e683cf18da7639ddccb056721a796c" }

[workspace.lints.rust]

# == Safer unsafe == #
unsafe_op_in_unsafe_fn = "warn"
invalid_reference_casting = "warn"

# == Style, readability == #
elided_lifetimes_in_paths = "warn" # https://quinedot.github.io/rust-learning/dont-hide.html
absolute_paths_not_starting_with_crate = "warn"
single_use_lifetimes = "warn"
unreachable_pub = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
keyword_idents = "warn"
noop_method_call = "warn"

# == Compile-time / optimization == #
unused_crate_dependencies = "warn"
unused_macro_rules = "warn"

[workspace.lints.clippy]

# == Safer unsafe == #
undocumented_unsafe_blocks = "warn"
multiple_unsafe_ops_per_block = "warn"
transmute_ptr_to_ptr = "warn"
as_ptr_cast_mut = "warn"
cast_ptr_alignment = "warn"
fn_to_numeric_cast_any = "warn"
ptr_cast_constness = "warn"

# == Correctness == #
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_sign_loss = "warn"
float_cmp = "warn"
as_underscore = "warn"
unwrap_used = "warn" # Let’s either handle `None`, `Err` or use `expect` to give a reason.
large_stack_frames = "warn"

# == Style, readability == #
semicolon_outside_block = "warn" # With semicolon-outside-block-ignore-multiline = true
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
trait_duplication_in_bounds = "warn"
type_repetition_in_bounds = "warn"
checked_conversions = "warn"
get_unwrap = "warn"
similar_names = "warn" # Reduce risk of confusing similar names together, and protects against typos when variable shadowing was intended.
str_to_string = "warn"
string_to_string = "warn"
separated_literal_suffix = "warn"
unused_self = "warn"
useless_let_if_seq = "warn"
string_add = "warn"
range_plus_one = "warn"
self_named_module_files = "warn"

# == Compile-time / optimization == #
inline_always = "warn"
or_fun_call = "warn"
unnecessary_box_returns = "warn"

# == Extra-pedantic clippy == #
collection_is_never_read = "warn"
copy_iterator = "warn"
expl_impl_clone_on_copy = "warn"
implicit_clone = "warn"
large_types_passed_by_value = "warn"
redundant_clone = "warn"
alloc_instead_of_core = "warn"
empty_drop = "warn"
return_self_not_must_use = "warn"
wildcard_dependencies = "warn"

# == Let’s not merge unintended eprint!/print!/dbg! statements in libraries == #
print_stderr = "warn"
print_stdout = "warn"
dbg_macro = "warn"
