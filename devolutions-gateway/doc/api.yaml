---
openapi: 3.0.3
info:
  title: devolutions-gateway
  description: Protocol-aware fine-grained relay server
  contact:
    name: Devolutions Inc.
    email: ""
  license:
    name: MIT/Apache-2.0
  version: 2022.2.2
paths:
  /jet/diagnostics/clock:
    get:
      tags:
        - "crate::http::controllers::diagnostics"
      summary: "Retrieves server's clock in order to diagnose clock drifting."
      description: "Retrieves server's clock in order to diagnose clock drifting.\n\nClock drift is an issue for token validation because of claims such as `nbf` and `exp`.\n"
      operationId: get_clock
      responses:
        "200":
          description: "Server's clock"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GatewayClock"
      deprecated: false
  /jet/diagnostics/configuration:
    get:
      tags:
        - "crate::http::controllers::diagnostics"
      summary: Retrieves configuration.
      description: "Retrieves configuration.\n"
      operationId: get_configuration
      parameters:
        - name: scope_token
          in: header
          description: Scope token for gateway.diagnostics.read
          required: true
          deprecated: false
          schema:
            type: string
      responses:
        "200":
          description: Service configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GatewayConfiguration"
        "400":
          description: Bad request
        "401":
          description: Invalid or missing authorization token
        "403":
          description: Insufficient permissions
      deprecated: false
      security:
        - scope_token:
            - gateway.diagnostics.read
  /jet/diagnostics/logs:
    get:
      tags:
        - "crate::http::controllers::diagnostics"
      summary: Retrieves latest logs.
      description: "Retrieves latest logs.\n"
      operationId: get_logs
      parameters:
        - name: scope_token
          in: header
          description: Scope token for gateway.diagnostics.read
          required: true
          deprecated: false
          schema:
            type: string
      responses:
        "200":
          description: Latest logs
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad request
        "401":
          description: Invalid or missing authorization token
        "403":
          description: Insufficient permissions
        "500":
          description: Failed to retrieve logs
      deprecated: false
      security:
        - scope_token:
            - gateway.diagnostics.read
  /jet/health:
    get:
      tags:
        - "crate::http::controllers::health"
      summary: Performs a health check
      description: "Performs a health check\n"
      operationId: get_health
      responses:
        "200":
          description: Healthy message
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
  /jet/sessions:
    get:
      tags:
        - "crate::http::controllers::sessions"
      summary: Lists running sessions
      description: "Lists running sessions\n"
      operationId: get_sessions
      parameters:
        - name: scope_token
          in: header
          description: Scope token for gateway.sessions.read
          required: true
          deprecated: false
          schema:
            type: string
      responses:
        "200":
          description: Running sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionInfo"
        "400":
          description: Bad request
        "401":
          description: Invalid or missing authorization token
        "403":
          description: Insufficient permissions
      deprecated: false
      security:
        - scope_token:
            - gateway.sessions.read
components:
  schemas:
    ConnectionMode:
      type: string
      enum:
        - rdv
        - fwd
    GatewayClock:
      type: object
      required:
        - timestamp_secs
        - timestamp_millis
      properties:
        timestamp_millis:
          type: integer
          format: int64
        timestamp_secs:
          type: integer
          format: int64
    GatewayConfiguration:
      type: object
      required:
        - hostname
        - version
        - listeners
      properties:
        hostname:
          type: string
        listeners:
          type: array
          items:
            $ref: "#/components/schemas/ListenerConfig"
        version:
          type: string
    ListenerConfig:
      type: object
      required:
        - internal_url
        - external_url
      properties:
        external_url:
          type: string
        internal_url:
          type: string
    SessionInfo:
      type: object
      required:
        - association_id
        - application_protocol
        - recording_policy
        - filtering_policy
        - start_timestamp
        - connection_mode
      properties:
        application_protocol:
          type: string
        association_id:
          type: string
          format: uuid
        connection_mode:
          $ref: "#/components/schemas/ConnectionMode"
        destination_host:
          type: string
        filtering_policy:
          type: boolean
        recording_policy:
          type: boolean
        start_timestamp:
          type: string
          format: date-time

