/* tslint:disable */
/* eslint-disable */
/**
 * devolutions-gateway
 * Protocol-aware fine-grained relay server
 *
 * The version of the OpenAPI document: 2022.2.2
 * Contact: infos@devolutions.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubProvisionerKey } from './SubProvisionerKey';
import {
    SubProvisionerKeyFromJSON,
    SubProvisionerKeyFromJSONTyped,
    SubProvisionerKeyToJSON,
} from './SubProvisionerKey';
import type { Subscriber } from './Subscriber';
import {
    SubscriberFromJSON,
    SubscriberFromJSONTyped,
    SubscriberToJSON,
} from './Subscriber';

/**
 * 
 * @export
 * @interface ConfigPatch
 */
export interface ConfigPatch {
    /**
     * This Gateway's unique ID
     * @type {string}
     * @memberof ConfigPatch
     */
    id?: string;
    /**
     * 
     * @type {SubProvisionerKey}
     * @memberof ConfigPatch
     */
    subProvisionerPublicKey?: SubProvisionerKey;
    /**
     * 
     * @type {Subscriber}
     * @memberof ConfigPatch
     */
    subscriber?: Subscriber;
}

/**
 * Check if a given object implements the ConfigPatch interface.
 */
export function instanceOfConfigPatch(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfigPatchFromJSON(json: any): ConfigPatch {
    return ConfigPatchFromJSONTyped(json, false);
}

export function ConfigPatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigPatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'subProvisionerPublicKey': !exists(json, 'SubProvisionerPublicKey') ? undefined : SubProvisionerKeyFromJSON(json['SubProvisionerPublicKey']),
        'subscriber': !exists(json, 'Subscriber') ? undefined : SubscriberFromJSON(json['Subscriber']),
    };
}

export function ConfigPatchToJSON(value?: ConfigPatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'SubProvisionerPublicKey': SubProvisionerKeyToJSON(value.subProvisionerPublicKey),
        'Subscriber': SubscriberToJSON(value.subscriber),
    };
}

