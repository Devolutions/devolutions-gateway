    /// <summary>
    /// {{description}}{{^description}}Defines {{{name}}}{{/description}}
    /// </summary>
    {{#description}}
    /// <value>{{.}}</value>
    {{/description}}
    {{#vendorExtensions.x-cls-compliant}}
    [CLSCompliant({{{.}}})]
    {{/vendorExtensions.x-cls-compliant}}
    {{#vendorExtensions.x-com-visible}}
    [ComVisible({{{.}}})]
    {{/vendorExtensions.x-com-visible}}
    {{#allowableValues}}
    {{#enumVars}}
    {{#-first}}
    {{#isString}}
    {{^useGenericHost}}
    [JsonConverter(typeof(StringEnumConverter))]
    {{/useGenericHost}}
    {{/isString}}
    {{/-first}}
    {{/enumVars}}
    {{/allowableValues}}
    {{>visibility}} enum {{datatypeWithEnum}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}{{#vendorExtensions.x-enum-byte}}: byte{{/vendorExtensions.x-enum-byte}}
    {
        {{#allowableValues}}
        {{#enumVars}}
        /// <summary>
        /// Enum {{name}} for value: {{value}}
        /// </summary>
        {{#isString}}
        [EnumMember(Value = "{{{value}}}")]
        {{/isString}}
        {{name}}{{^isString}} = {{{value}}}{{/isString}}{{#isString}} = {{-index}}{{/isString}}{{^-last}},{{/-last}}

        {{/enumVars}}
        {{/allowableValues}}
    }{{! NOTE: This model's enumVars is modified to look like CodegenProperty}}

    {{#isString}}
    {{>visibility}} static class {{classname}}Extensions
    {
        /// <summary>
        /// Returns the value as string for a given variant
        /// </summary>
        {{>visibility}} static string ToValue(this {{classname}} variant)
        {
            switch (variant)
            {
            {{#allowableValues}}
            {{#enumVars}}
                case {{classname}}.{{name}}:
                    return "{{{value}}}";
            {{/enumVars}}
            {{/allowableValues}}
                default:
                    throw new ArgumentOutOfRangeException(nameof(variant), $"Unexpected variant: {variant}");
            }
        }
    }
    {{/isString}}
