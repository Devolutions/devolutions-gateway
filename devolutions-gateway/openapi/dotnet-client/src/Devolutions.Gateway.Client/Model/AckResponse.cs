/*
 * devolutions-gateway
 *
 * Protocol-aware fine-grained relay server
 *
 * The version of the OpenAPI document: 2025.2.3
 * Contact: infos@devolutions.net
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Devolutions.Gateway.Client.Client.FileParameter;
using OpenAPIDateConverter = Devolutions.Gateway.Client.Client.OpenAPIDateConverter;

namespace Devolutions.Gateway.Client.Model
{
    /// <summary>
    /// AckResponse
    /// </summary>
    [DataContract(Name = "AckResponse")]
    public partial class AckResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AckResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AckResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AckResponse" /> class.
        /// </summary>
        /// <param name="deletedCount">Number of events that were acknowledged and deleted (required).</param>
        public AckResponse(long deletedCount = default(long))
        {
            this.DeletedCount = deletedCount;
        }

        /// <summary>
        /// Number of events that were acknowledged and deleted
        /// </summary>
        /// <value>Number of events that were acknowledged and deleted</value>
        [DataMember(Name = "deleted_count", IsRequired = true, EmitDefaultValue = true)]
        public long DeletedCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AckResponse {\n");
            sb.Append("  DeletedCount: ").Append(DeletedCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // DeletedCount (long) minimum
            if (this.DeletedCount < (long)0)
            {
                yield return new ValidationResult("Invalid value for DeletedCount, must be a value greater than or equal to 0.", new [] { "DeletedCount" });
            }

            yield break;
        }
    }

}
