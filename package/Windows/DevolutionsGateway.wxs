<?xml version="1.0" encoding="UTF-8"?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
  xmlns:fw="http://schemas.microsoft.com/wix/FirewallExtension"
  xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
  xmlns:UserPrivileges="http://schemas.appsecinc.com/wix/UserPrivilegesExtension">

  <?include $(sys.CURRENTDIR)Includes\DevolutionsGateway.wxi ?>

  <!-- The upgrade code must never change as long as the product lives! -->
  <!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
  <Product Id="*" Name="$(var.ProductName)" Language="!(loc.Language)" Version="$(var.Version)" Manufacturer="!(loc.VendorFullName)" UpgradeCode="$(var.UpgradeCode)">

    <!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
    <Package Id="*" InstallerVersion="200" Compressed="yes" InstallScope="perMachine" InstallPrivileges="elevated" Description="!(loc.ProductDescription)" Platform="$(var.Platform)" Languages="!(loc.Language)"/>

    <!-- Upgrade logic -->
    <!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed next to each other -->
    <!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
    <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="yes" />

    <Condition Message="!(loc.OS2Old)"><![CDATA[Installed OR (VersionNT >= 602)]]></Condition>
    <?if $(var.Platform) = x64 ?>
      <Condition Message="!(loc.x86VersionRequired)"><![CDATA[VersionNT64]]></Condition>
    <?endif?>
    <?if $(var.Platform) = x86 ?>
      <Condition Message="!(loc.x64VersionRequired)"><![CDATA[NOT VersionNT64]]></Condition>
    <?endif?>

    <!-- UI customization -->
    <WixVariable Id="WixUIBannerBmp" Value="WixUIBanner.jpg" />
    <WixVariable Id="WixUIDialogBmp" Value="WixUiDialog.jpg" />
    <Icon Id="DevolutionsGateway.ico" SourceFile="DevolutionsGateway.ico" />

    <!-- Helper properties for determining what action is taking place -->
    <SetProperty After="FindRelatedProducts" Id="FirstInstall" Value="true">
          NOT Installed AND NOT WIX_UPGRADE_DETECTED AND NOT WIX_DOWNGRADE_DETECTED
    </SetProperty>
    <SetProperty After="SetFirstInstall" Id="Upgrading" Value="true">
          WIX_UPGRADE_DETECTED AND NOT (REMOVE="ALL")
    </SetProperty>
    <SetProperty After="RemoveExistingProducts" Id="RemovingForUpgrade" Sequence="execute" Value="true">
          (REMOVE="ALL") AND UPGRADINGPRODUCTCODE
    </SetProperty>
    <SetProperty After="SetUpgrading" Id="Uninstalling" Value="true">
          Installed AND REMOVE AND NOT (WIX_UPGRADE_DETECTED OR UPGRADINGPRODUCTCODE)
    </SetProperty>
    <SetProperty After="SetUninstalling" Id="Maintenance" Value="true">
          Installed AND NOT Upgrading AND NOT Uninstalling AND NOT UPGRADINGPRODUCTCODE
    </SetProperty>

    <Binary Id="B.HELPER" SourceFile="$(var.ActionsLib)" />

    <Property Id="ARPPRODUCTICON" Value="DevolutionsGateway.ico" />
    <Property Id="ARPHELPLINK" Value="$(var.InfoURL)" />
    <Property Id="P.POWERSHELLEXE">
      <RegistrySearch Id="POWERSHELLEXE" Root="HKLM" Key="SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" Name="Path" Type="raw" />
    </Property>
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
    <Property Id="INSTALLDIR">
      <RegistrySearch Id="DetermineInstallLocation" Type="raw" Root="HKLM" Key="Software\$(var.VendorName)\InstalledProducts\$(var.ProductName)" Name="InstallLocation" />
    </Property>

    <!-- Public properties (supported) -->
    <Property Id="P.DGW.NO_START_SERVICE" Secure="yes" />

    <!-- Properties to support Gateway configuration via Installer UI-->
    <Property Id="P.CONFIGURE" Value="1" />
    <Property Id="P.ERROR" Secure="yes" />
    <Property Id="P.SERVICE_START" Value="3" Secure="yes" /> <!-- 0x00000003 SERVICE_DEMAND_START -->
    <Property Id="P.HASPWSH" Value="1" />
    <!-- External URL -->
    <Property Id="P.ACCESSURI_SCHEME" Value="https" />
    <Property Id="P.ACCESSURI_HOST" Secure="yes" />
    <Property Id="P.ACCESSURI_PORT" Value="443" />
    <!-- Listeners -->
    <Property Id="P.HTTPURI_SCHEME" Value="https" />
    <Property Id="P.HTTPURI_HOST" Value="0.0.0.0" />
    <Property Id="P.HTTPURI_PORT" Value="7171" />
    <Property Id="P.TCPURI_SCHEME" Value="tcp" />
    <Property Id="P.TCPURI_HOST" Value="0.0.0.0" />
    <Property Id="P.TCPURI_PORT" Value="8181" />
    <!-- Certificate -->
    <Property Id="P.CERT_FILE" Secure="yes" />
    <Property Id="P.CERT_NEED_PASS" Value="1" />
    <Property Id="P.CERT_PASS" Secure="yes" Hidden="yes" />
    <Property Id="P.CERT_PASS_MASKED" Value="*" />
    <Property Id="P.CERT_PK_FILE" Secure="yes" />
    <!-- Provisioner Public Key -->
    <Property Id="P.PUBLIC_KEY_FILE" Secure="yes" />
    <!-- Final PowerShell configuration commands -->
    <Property Id="P.ACCESSURI_CMD" Secure="yes" />
    <Property Id="P.LISTENER_CMD" Secure="yes" />
    <Property Id="P.CERT_CMD" Secure="yes" Hidden="yes" />
    <Property Id="P.PK_CMD" Secure="yes" />

    <SetProperty Id="CA.SetProgramDataPermissions" 
                 Value='"cmd.exe" /c ECHO Y| &quot;%windir%\System32\cacls.exe&quot; %ProgramData%\Devolutions\Gateway /S:$(var.ProgramDataSddl) /C /t' 
                 Sequence="execute" 
                 Before="CA.SetProgramDataPermissions" />
    <SetProperty Id="CA.InitConfigAfterFinalize" Value="&quot;[INSTALLDIR]\DevolutionsGateway.exe&quot; --config-init-only" Sequence="execute" Before="CA.InitConfigAfterFinalize" />
    <SetProperty Id="CA.SetGatewayStartupType" Value="[P.SERVICE_START]" Sequence="execute" Before="CA.SetGatewayStartupType" />
    <SetProperty Id="CA.ConfigHostname" Value='&quot;[P.POWERSHELLEXE]&quot; -ep Bypass -Command "&amp; Import-Module &apos;[INSTALLDIR]PowerShell\Modules\DevolutionsGateway&apos;; [P.ACCESSURI_CMD]"' Sequence="execute" Before="CA.ConfigHostname" />
    <SetProperty Id="CA.ConfigListeners" Value='&quot;[P.POWERSHELLEXE]&quot; -ep Bypass -Command "&amp; Import-Module &apos;[INSTALLDIR]PowerShell\Modules\DevolutionsGateway&apos;; [P.LISTENER_CMD]"' Sequence="execute" Before="CA.ConfigListeners" />
    <SetProperty Id="CA.ConfigCert" Value='&quot;[P.POWERSHELLEXE]&quot; -ep Bypass -Command "&amp; Import-Module &apos;[INSTALLDIR]PowerShell\Modules\DevolutionsGateway&apos;; [P.CERT_CMD]"' Sequence="execute" Before="CA.ConfigCert" />
    <SetProperty Id="CA.ConfigPk" Value='&quot;[P.POWERSHELLEXE]&quot; -ep Bypass -Command "&amp; Import-Module &apos;[INSTALLDIR]PowerShell\Modules\DevolutionsGateway&apos;; [P.PK_CMD]"' Sequence="execute" Before="CA.ConfigPk" />

    <!-- Reinstall the DGatewayService feature on maintenance installations 
            This forces the service to be stopped and started, 
            re-reading any configuration updated by the installer -->
    <CustomAction Id="CA.SetREINSTALL" Property="REINSTALL" Value="F.DGatewayService" />
    <CustomAction Id="CA.SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLDIR]" />
    <CustomAction Id="CA.InitConfigAfterFinalize" BinaryKey="WixCA" DllEntry="WixQuietExec"  Execute="deferred" Impersonate="no" Return="check" />
    <CustomAction Id="CA.SetProgramDataPermissions" BinaryKey="WixCA" DllEntry="WixQuietExec" Execute="deferred" Impersonate="no" Return="ignore"/>
    <CustomAction Id="CA.CheckPowerShellVersion" BinaryKey="B.HELPER" DllEntry="CheckPowerShellVersion" Execute="immediate" Return="ignore" />
    <CustomAction Id="CA.ValidateAccessUri" BinaryKey="B.HELPER" DllEntry="ValidateAccessUri" Execute="immediate" Return="check" />
    <CustomAction Id="CA.ValidateListeners" BinaryKey="B.HELPER" DllEntry="ValidateListeners" Execute="immediate" Return="check" />
    <CustomAction Id="CA.ValidateCertificate" BinaryKey="B.HELPER" DllEntry="ValidateCertificate" Execute="immediate" Return="check" />
    <CustomAction Id="CA.ValidatePublicKey" BinaryKey="B.HELPER" DllEntry="ValidatePublicKey" Execute="immediate" Return="check" />
    <CustomAction Id="CA.GenerateSummary" BinaryKey="B.HELPER" DllEntry="GenerateSummary" Execute="immediate" Return="check" />
    <CustomAction Id="CA.BrowseForCertificate" BinaryKey="B.HELPER" DllEntry="BrowseForCertificate" Execute="immediate" Return="check" />
    <CustomAction Id="CA.BrowseForPrivateKey" BinaryKey="B.HELPER" DllEntry="BrowseForPrivateKey" Execute="immediate" Return="check" />
    <CustomAction Id="CA.BrowseForPublicKey" BinaryKey="B.HELPER" DllEntry="BrowseForPublicKey" Execute="immediate" Return="ignore" />
    <CustomAction Id="CA.QueryGatewayStartupType" BinaryKey="B.HELPER" DllEntry="QueryGatewayStartupType" Execute="immediate" Return="ignore" />
    <CustomAction Id="CA.SetGatewayStartupType" BinaryKey="B.HELPER" DllEntry="SetGatewayStartupType" Execute="deferred" Impersonate="no" Return="ignore" />
    <CustomAction Id="CA.StartGatewayIfNeeded" BinaryKey="B.HELPER" DllEntry="StartGatewayIfNeeded" Execute="deferred" Impersonate="no" Return="ignore" />
    <CustomAction Id="CA.ConfigHostname" BinaryKey="WixCA" DllEntry="WixQuietExec" Execute="deferred" Impersonate="no" Return="check"/>
    <CustomAction Id="CA.ConfigListeners" BinaryKey="WixCA" DllEntry="WixQuietExec" Execute="deferred" Impersonate="no" Return="check"/>
    <CustomAction Id="CA.ConfigCert" BinaryKey="WixCA" DllEntry="WixQuietExec" Execute="deferred" Impersonate="no" Return="check" HideTarget="yes" />
    <CustomAction Id="CA.ConfigPk" BinaryKey="WixCA" DllEntry="WixQuietExec" Execute="deferred" Impersonate="no" Return="check"/>

    <InstallUISequence>
      <Custom Action='CA.CheckPowerShellVersion' After='LaunchConditions'/> 
    </InstallUISequence>
    <InstallExecuteSequence>
      <Custom Action='CA.SetProgramDataPermissions' After='CreateFolders'/>
      <Custom Action="CA.SetARPINSTALLLOCATION" After="InstallValidate"/>
      <Custom Action="CA.SetREINSTALL" Before="CostInitialize">
        Maintenance AND NOT REINSTALL
      </Custom>
      <Custom Action="CA.QueryGatewayStartupType" Before="RemoveExistingProducts">1</Custom>
      <Custom Action="CA.SetGatewayStartupType" Before="StartServices">1</Custom>
      <Custom Action="CA.InitConfigAfterFinalize" Before="StartServices">(NOT Installed OR REINSTALL) AND (P.CONFIGURE = "1")</Custom>
      <Custom Action="CA.ConfigHostname" Before="StartServices">(NOT Installed OR REINSTALL) AND (P.CONFIGURE = "0")</Custom>
      <Custom Action="CA.ConfigListeners" Before="StartServices">(NOT Installed OR REINSTALL) AND (P.CONFIGURE = "0")</Custom>
      <Custom Action="CA.ConfigCert" Before="StartServices">(NOT Installed OR REINSTALL) AND (P.CONFIGURE = "0")</Custom>
      <Custom Action="CA.ConfigPk" Before="StartServices">(NOT Installed OR REINSTALL) AND (P.CONFIGURE = "0")</Custom>
      <Custom Action="CA.StartGatewayIfNeeded" After="StartServices">(NOT Uninstalling) AND (NOT P.DGW.NO_START_SERVICE)</Custom>
    </InstallExecuteSequence>

    <Media Id="1" Cabinet="dgateway.cab" EmbedCab="yes" />
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.PlatformProgramFilesFolder)" Name="PFiles">
        <Directory Id="APPLICATIONFOLDER" Name="$(var.VendorName)">
          <Directory Id="INSTALLDIR" Name="Gateway">
            <Directory Id="PowerShell" Name="PowerShell">
              <Directory Id="Modules" Name="Modules">
                <Directory Id="D.DGATEWAYPSROOTDIRECTORY" Name="DevolutionsGateway"/>
              </Directory>
            </Directory>
            <Component Id="C.DGatewayRegistryEntries" Guid="*" Win64="$(var.Win64)">
              <RegistryKey Root="HKLM" Key="Software\Devolutions\Gateway">
                <RegistryValue Type="string" Name="InstallDir" Value="[INSTALLDIR]" KeyPath="yes"/>
              </RegistryKey>
            </Component>
          </Directory>
        </Directory>
      </Directory>
      <Directory Id="CommonAppDataFolder">
        <Directory Id="CommonDevolutionsFolder" Name="Devolutions">
          <Directory Id="ProgramDataFolder" Name="Gateway">
          </Directory>
        </Directory>
      </Directory>
    </Directory>
    <DirectoryRef Id="ProgramDataFolder">
      <Component Id="C.CommonAppDataFolder" Guid="dc6b6f37-78d2-4f0a-9464-d1f63ef64fab" Permanent="yes">
        <CreateFolder>
          <PermissionEx Sddl="$(var.ProgramDataSddl)" />
        </CreateFolder>
      </Component>
    </DirectoryRef>

    <Component Id="C.DGatewayService" Guid="31eaa967-64e3-469c-b0c9-c9ecea61b7d3" Win64="$(var.Win64)" Directory="INSTALLDIR">
      <File Name="DevolutionsGateway.exe" Source="$(var.DGatewayExecutable)" Id="DevolutionsGateway.exe" ProcessorArchitecture="$(var.ProcessorArchitecture)" KeyPath="yes" Vital="yes" DiskId="1">
        <fw:FirewallException Id="DGatewayServiceFirewallExceptionTcp" Name="$(var.ServiceDisplayName) TCP" Description="Devolutions Gateway Service TCP" Protocol="tcp" Profile="all" Scope="any" IgnoreFailure="yes"/>
        <fw:FirewallException Id="DGatewayServiceFirewallExceptionUdp" Name="$(var.ServiceDisplayName) UDP" Description="Devolutions Gateway Service UDP" Protocol="udp" Profile="all" Scope="any" IgnoreFailure="yes"/>
      </File>
      <ServiceInstall Id="DGatewayServiceInstall" Type="ownProcess" Interactive="no" Vital="yes" Name="$(var.ServiceName)" Arguments="--service" 
        DisplayName="$(var.ServiceDisplayName)" Description="$(var.ServiceDescription)" Start="demand" ErrorControl="ignore">
        <util:ServiceConfig FirstFailureActionType='restart' SecondFailureActionType='restart' ThirdFailureActionType='restart' RestartServiceDelayInSeconds='900' ResetPeriodInDays='1'/>
      </ServiceInstall>
      <ServiceControl Id="DGatewayServiceControl" Stop="both" Remove="uninstall" Name="$(var.ServiceName)" Wait="no" />
    </Component>

    <!-- Features define which parts of the application can be installed in a custom installation -->
    <Feature Id="F.DGatewayService" Title="$(var.ServiceDisplayName)" Display="expand" Level="1" Absent="disallow" AllowAdvertise="no">
      <ComponentRef Id="C.DGatewayService"/>
      <ComponentRef Id="C.CommonAppDataFolder"/>
      <ComponentRef Id="C.DGatewayRegistryEntries"/>
      <ComponentGroupRef Id="CG.DGatewayPSComponentGroup"/>
    </Feature>

    <UI>
      <UIRef Id="WixUI_CustomInstallDir"/>
    </UI>
    <UI>
      <TextStyle Id="MyWixUI_Font_Title" FaceName="!(loc.Advanced_Font_FaceName)" Size="!(loc.Advanced_Font_Title_Size)" Bold="yes" Red="255" Blue="255" Green="255" />
      <TextStyle Id="MyWixUI_Font_Description" FaceName="!(loc.Advanced_Font_FaceName)" Size="!(loc.Advanced_Font_Normal_Size)" Red="255" Blue="255" Green="255" />
    </UI>
  </Product>
</Wix>
