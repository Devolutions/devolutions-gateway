name: publish-dev
on:
  workflow_dispatch:
    inputs:
      run-number:
        description: 'run id'
        default: "1409427803"
        required: true

concurrency: publish-dev

jobs:
  containers:
    name: container [${{ matrix.os }} ${{ matrix.arch }}]
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86_64 ]
        os: [ windows, linux ]
        include:
          - os: windows
            runner: windows-2019
          - os: linux
            runner: ubuntu-18.04

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v2

      - name: Get version
        id: get-version
        shell: pwsh
        run: |
          $Version = Get-Content VERSION -TotalCount 1
          echo "::set-output name=version::$Version"

      - name: Download artifacts
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run download ${{ github.events.inputs.run-number }} -n devolutions-gateway -D $Env:RUNNER_TEMP -R Devolutions/devolutions-gateway

      - name: Deploy artifacts
        id: deploy-artifacts
        shell: pwsh
        run: |
          $PkgDir = Join-Path $pwd Package $Env:RUNNER_OS # RUNNER_OS is camelcase
          echo "::set-output name=package-path::$PkgDir"

          $SourceFileName = DevolutionsGateway_${{ matrix.os }}_${{ steps.get-version.outputs.version }}_${{ matrix.arch }}

          if ($Env:RUNNER_OS -eq "Windows") {
            $SourceFileName = "$($SourceFileName).exe"
            $TargetFileName = "DevolutionsGateway.exe"
          } else { 
            $TargetFileName = "devolutions-gateway"
          }

          $SourcePath = Get-ChildItem -Recurse -Filter $SourceFileName -File -Path $Env:RUNNER_TEMP
          $TargetPath = Join-Path $PkgDir $TargetFileName
          Copy-Item $SourcePath $TargetPath

          if ($Env:RUNNER_OS -eq "Linux") {
            Invoke-Expression "chmod +x $TargetPath"
          }

      - name: Build and publish Linux container
        shell: pwsh
        if: matrix.os == 'linux'
        working-directory: ${{ steps.deploy-artifacts.outputs.package-path }}
        run: |
          docker build -t devolutions/devolutions-gateway:${{ steps.get-version.outputs.version }}-buster-dev .

      - name: Build and publish servercore container
        shell: pwsh
        if: matrix.os == 'windows'
        working-directory: ${{ steps.deploy-artifacts.outputs.package-path }}
        run: |
          docker build -t devolutions/devolutions-gateway:${{ steps.get-version.outputs.version }}-servercore-ltsc2019-dev .

      - name: Build and publish nanoserver container
        shell: pwsh
        if: matrix.os == 'windows'
        working-directory: ${{ steps.deploy-artifacts.outputs.package-path }}
        run: |
          docker build --build-arg FROM_IMAGE=mcr.microsoft.com/windows/nanoserver:1809 -t devolutions/devolutions-gateway:${{ steps.get-version.outputs.version }}-nanoserver-1809-dev .
