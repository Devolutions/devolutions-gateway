/*
 * Devolutions PEDM API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Rule {
    #[serde(rename = "Asker", skip_serializing_if = "Option::is_none")]
    pub asker: Option<models::ApplicationFilter>,
    #[serde(rename = "ElevationKind")]
    pub elevation_kind: models::ElevationKind,
    #[serde(rename = "Id")]
    pub id: String,
    #[serde(rename = "Name")]
    pub name: String,
    #[serde(rename = "Target")]
    pub target: models::ApplicationFilter,
}

impl Rule {
    pub fn new(
        elevation_kind: models::ElevationKind,
        id: String,
        name: String,
        target: models::ApplicationFilter,
    ) -> Rule {
        Rule {
            asker: None,
            elevation_kind,
            id,
            name,
            target,
        }
    }
}
