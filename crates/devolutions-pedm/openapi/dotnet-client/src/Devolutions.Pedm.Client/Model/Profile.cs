/*
 * Devolutions PEDM API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Devolutions.Pedm.Client.Client.FileParameter;
using OpenAPIDateConverter = Devolutions.Pedm.Client.Client.OpenAPIDateConverter;

namespace Devolutions.Pedm.Client.Model
{
    /// <summary>
    /// Profile
    /// </summary>
    [DataContract(Name = "Profile")]
    public partial class Profile : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets DefaultElevationKind
        /// </summary>
        [DataMember(Name = "DefaultElevationKind", IsRequired = true, EmitDefaultValue = true)]
        public ElevationKind DefaultElevationKind { get; set; }

        /// <summary>
        /// Gets or Sets ElevationMethod
        /// </summary>
        [DataMember(Name = "ElevationMethod", IsRequired = true, EmitDefaultValue = true)]
        public ElevationMethod ElevationMethod { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Profile" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Profile() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Profile" /> class.
        /// </summary>
        /// <param name="defaultElevationKind">defaultElevationKind (required).</param>
        /// <param name="elevationMethod">elevationMethod (required).</param>
        /// <param name="elevationSettings">elevationSettings (required).</param>
        /// <param name="id">id (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="promptSecureDesktop">promptSecureDesktop (required).</param>
        public Profile(ElevationKind defaultElevationKind = default(ElevationKind), ElevationMethod elevationMethod = default(ElevationMethod), ElevationConfigurations elevationSettings = default(ElevationConfigurations), Guid id = default(Guid), string name = default(string), bool promptSecureDesktop = default(bool))
        {
            this.DefaultElevationKind = defaultElevationKind;
            this.ElevationMethod = elevationMethod;
            // to ensure "elevationSettings" is required (not null)
            if (elevationSettings == null)
            {
                throw new ArgumentNullException("elevationSettings is a required property for Profile and cannot be null");
            }
            this.ElevationSettings = elevationSettings;
            this.Id = id;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for Profile and cannot be null");
            }
            this.Name = name;
            this.PromptSecureDesktop = promptSecureDesktop;
        }

        /// <summary>
        /// Gets or Sets ElevationSettings
        /// </summary>
        [DataMember(Name = "ElevationSettings", IsRequired = true, EmitDefaultValue = true)]
        public ElevationConfigurations ElevationSettings { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "Id", IsRequired = true, EmitDefaultValue = true)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "Name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets PromptSecureDesktop
        /// </summary>
        [DataMember(Name = "PromptSecureDesktop", IsRequired = true, EmitDefaultValue = true)]
        public bool PromptSecureDesktop { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Profile {\n");
            sb.Append("  DefaultElevationKind: ").Append(DefaultElevationKind).Append("\n");
            sb.Append("  ElevationMethod: ").Append(ElevationMethod).Append("\n");
            sb.Append("  ElevationSettings: ").Append(ElevationSettings).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PromptSecureDesktop: ").Append(PromptSecureDesktop).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
