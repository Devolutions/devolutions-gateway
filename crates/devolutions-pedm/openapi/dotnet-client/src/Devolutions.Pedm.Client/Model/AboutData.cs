/*
 * Devolutions PEDM API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Devolutions.Pedm.Client.Client.FileParameter;
using OpenAPIDateConverter = Devolutions.Pedm.Client.Client.OpenAPIDateConverter;

namespace Devolutions.Pedm.Client.Model
{
    /// <summary>
    /// AboutData
    /// </summary>
    [DataContract(Name = "AboutData")]
    public partial class AboutData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AboutData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AboutData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AboutData" /> class.
        /// </summary>
        /// <param name="currentRequestCount">currentRequestCount (required).</param>
        /// <param name="lastRequestTime">The time of the most recent request.  This can be &#x60;None&#x60; if &#x60;/about&#x60; is the first request made..</param>
        /// <param name="runId">runId (required).</param>
        /// <param name="startTime">startTime (required).</param>
        /// <param name="startupRequestCount">startupRequestCount (required).</param>
        /// <param name="varVersion">varVersion (required).</param>
        public AboutData(int currentRequestCount = default(int), DateTime lastRequestTime = default(DateTime), int runId = default(int), DateTime startTime = default(DateTime), int startupRequestCount = default(int), string varVersion = default(string))
        {
            this.CurrentRequestCount = currentRequestCount;
            this.RunId = runId;
            this.StartTime = startTime;
            this.StartupRequestCount = startupRequestCount;
            // to ensure "varVersion" is required (not null)
            if (varVersion == null)
            {
                throw new ArgumentNullException("varVersion is a required property for AboutData and cannot be null");
            }
            this.VarVersion = varVersion;
            this.LastRequestTime = lastRequestTime;
        }

        /// <summary>
        /// Gets or Sets CurrentRequestCount
        /// </summary>
        [DataMember(Name = "CurrentRequestCount", IsRequired = true, EmitDefaultValue = true)]
        public int CurrentRequestCount { get; set; }

        /// <summary>
        /// The time of the most recent request.  This can be &#x60;None&#x60; if &#x60;/about&#x60; is the first request made.
        /// </summary>
        /// <value>The time of the most recent request.  This can be &#x60;None&#x60; if &#x60;/about&#x60; is the first request made.</value>
        [DataMember(Name = "LastRequestTime", EmitDefaultValue = false)]
        public DateTime LastRequestTime { get; set; }

        /// <summary>
        /// Gets or Sets RunId
        /// </summary>
        [DataMember(Name = "RunId", IsRequired = true, EmitDefaultValue = true)]
        public int RunId { get; set; }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name = "StartTime", IsRequired = true, EmitDefaultValue = true)]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// Gets or Sets StartupRequestCount
        /// </summary>
        [DataMember(Name = "StartupRequestCount", IsRequired = true, EmitDefaultValue = true)]
        public int StartupRequestCount { get; set; }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "Version", IsRequired = true, EmitDefaultValue = true)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AboutData {\n");
            sb.Append("  CurrentRequestCount: ").Append(CurrentRequestCount).Append("\n");
            sb.Append("  LastRequestTime: ").Append(LastRequestTime).Append("\n");
            sb.Append("  RunId: ").Append(RunId).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  StartupRequestCount: ").Append(StartupRequestCount).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
