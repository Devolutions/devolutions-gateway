/*
 * Devolutions PEDM API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Devolutions.Pedm.Client.Client.FileParameter;
using OpenAPIDateConverter = Devolutions.Pedm.Client.Client.OpenAPIDateConverter;

namespace Devolutions.Pedm.Client.Model
{
    /// <summary>
    /// LaunchPayload
    /// </summary>
    [DataContract(Name = "LaunchPayload")]
    public partial class LaunchPayload : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LaunchPayload" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LaunchPayload() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LaunchPayload" /> class.
        /// </summary>
        /// <param name="commandLine">commandLine.</param>
        /// <param name="creationFlags">creationFlags (required).</param>
        /// <param name="executablePath">executablePath.</param>
        /// <param name="startupInfo">startupInfo.</param>
        /// <param name="workingDirectory">workingDirectory.</param>
        public LaunchPayload(string commandLine = default(string), int creationFlags = default(int), string executablePath = default(string), StartupInfoDto startupInfo = default(StartupInfoDto), string workingDirectory = default(string))
        {
            this.CreationFlags = creationFlags;
            this.CommandLine = commandLine;
            this.ExecutablePath = executablePath;
            this.StartupInfo = startupInfo;
            this.WorkingDirectory = workingDirectory;
        }

        /// <summary>
        /// Gets or Sets CommandLine
        /// </summary>
        [DataMember(Name = "CommandLine", EmitDefaultValue = false)]
        public string CommandLine { get; set; }

        /// <summary>
        /// Gets or Sets CreationFlags
        /// </summary>
        [DataMember(Name = "CreationFlags", IsRequired = true, EmitDefaultValue = true)]
        public int CreationFlags { get; set; }

        /// <summary>
        /// Gets or Sets ExecutablePath
        /// </summary>
        [DataMember(Name = "ExecutablePath", EmitDefaultValue = false)]
        public string ExecutablePath { get; set; }

        /// <summary>
        /// Gets or Sets StartupInfo
        /// </summary>
        [DataMember(Name = "StartupInfo", EmitDefaultValue = false)]
        public StartupInfoDto StartupInfo { get; set; }

        /// <summary>
        /// Gets or Sets WorkingDirectory
        /// </summary>
        [DataMember(Name = "WorkingDirectory", EmitDefaultValue = false)]
        public string WorkingDirectory { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LaunchPayload {\n");
            sb.Append("  CommandLine: ").Append(CommandLine).Append("\n");
            sb.Append("  CreationFlags: ").Append(CreationFlags).Append("\n");
            sb.Append("  ExecutablePath: ").Append(ExecutablePath).Append("\n");
            sb.Append("  StartupInfo: ").Append(StartupInfo).Append("\n");
            sb.Append("  WorkingDirectory: ").Append(WorkingDirectory).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CreationFlags (int) minimum
            if (this.CreationFlags < (int)0)
            {
                yield return new ValidationResult("Invalid value for CreationFlags, must be a value greater than or equal to 0.", new [] { "CreationFlags" });
            }

            yield break;
        }
    }

}
